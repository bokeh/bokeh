name: Docker image - Build

on:
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run tests (0 or 1)'
        required: true
        default: '0'

jobs:
  docker_build:
    runs-on: ubuntu-latest
    steps:
      - name: Set date environment variable
        run: |
          echo "iso_date=$(date -u --iso-8601)" >> $GITHUB_ENV
          echo "branch_name=$(echo ${{ github.ref_name }} | tr / -)" >> $GITHUB_ENV

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: bokehservice
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: scripts/docker
          load: true
          tags: |
            bokeh/bokeh-dev:latest
            bokeh/bokeh-dev:${{ env.iso_date }}
            bokeh/bokeh-dev:${{ env.branch_name }}





      - name: Push image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: scripts/docker
          push: true
          tags: |
            bokeh/bokeh-dev:latest
            bokeh/bokeh-dev:${{ env.iso_date }}
            bokeh/bokeh-dev:${{ env.branch_name }}




#      - name: Build and tag image
#        run: |
#          docker build -t bokeh/bokeh-dev:${{ env.iso_date }} scripts/docker
#
#      - name: Push image to Docker
#        run: |
#          docker push bokeh/bokeh-dev:${{ env.iso_date }}


#      - name: Save image to tar file
#        run: |
#          docker save -o bokeh-dev.tar bokeh-dev

#      - name: Upload artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: artifact
#          path: bokeh-dev.tar

#      - name: Run tests
#        if: ${{ github.event.inputs.run_tests }}
#        run: |
#          docker run -v $GITHUB_WORKSPACE:/bokeh -u $(id -u):$(id -g) --rm -e BOKEH_DOCKER_BUILD=1 -e BOKEH_DOCKER_TEST=1 bokeh-dev:latest

#      - name: Collect results
#        if: ${{ github.event.inputs.run_tests }}
#        run: |
#          OS=$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')
#          SRC="bokehjs/test/baselines/${OS}"
#          DST="bokehjs-report/${SRC}"
#          mkdir -p ${DST}
#          if [[ -e ${SRC}/report.json ]];
#          then
#            CHANGED=$(git status --short ${SRC}/\*.blf ${SRC}/\*.png | cut -c4-)
#            cp ${SRC}/report.json ${CHANGED} ${DST}
#          fi

#      - name: Upload test report
#        if: ${{ github.event.inputs.run_tests }}
#        uses: actions/upload-artifact@v1
#        with:
#          name: artifact
#          path: bokehjs-report
