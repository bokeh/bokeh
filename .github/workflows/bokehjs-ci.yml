name: BokehJS-CI

on:
  push:
    branches:
      - main
      - branch-*
  pull_request:

env:
  CHROME_VER: "110.0.5481.100"
  CHROME_REV: "chromium_2333"
  BINARYEN_VER: "112"

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x]

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Upgrade npm
        shell: bash
        run: |
          npm install --location=global npm

      - name: Setup rust
        shell: bash
        run: |
          rustup update
          rustup target add wasm32-unknown-unknown
          cargo install wasm-bindgen-cli # TODO: pre-compile

      - name: Install binaryen
        shell: bash
        run: |
          PLATFORM=$(echo ${RUNNER_OS} | tr '[A-Z]' '[a-z]')
          VER=${BINARYEN_VER}
          ARCH="x86_64"
          NAME="binaryen-version_${VER}"
          FILE="${NAME}-${ARCH}-${PLATFORM}.tar.gz"
          URL="https://github.com/WebAssembly/binaryen/releases/download/version_${VER}/${FILE}"
          curl -L -O ${URL}
          tar -xzvf ${FILE}
          echo "$(pwd)/${NAME}/bin" >> ${GITHUB_PATH}

      - name: Install chromium
        if: runner.os == 'Linux'
        shell: bash
        run: |
          if [[ "$(chromium --version | cut -d' ' -f2)" = "$CHROME_VER" ]]; then
            echo "Using pre-installed version of chromium"
          else
            URL=https://github.com/bokeh/chromium/raw/main/linux/$CHROME_VER
            wget --no-verbose $URL/$CHROME_REV.assert
            wget --no-verbose $URL/$CHROME_REV.snap

            sudo snap ack $CHROME_REV.assert
            sudo snap install $CHROME_REV.snap
          fi

      - name: Install dependencies
        working-directory: ./bokehjs
        shell: bash
        run: |
          npm ci --no-progress

      - name: List installed software
        working-directory: ./bokehjs
        shell: bash
        run: |
          echo "node $(node --version)"
          echo "npm $(npm --version)"
          rustc --version
          cargo --version
          wasm-bindgen --version
          wasm-opt --version
          if [ "$RUNNER_OS" == "Linux" ]; then
            chromium --version
          elif [ "$RUNNER_OS" == "Windows" ]; then
            # TODO: this hangs; version is reported in tests
            # c:/Program\ Files/Google/Chrome/Application/chrome.EXE --version
            echo "Chromium ??? (see tests)"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --version
          fi
          npm list

      - name: Build bokehjs
        working-directory: ./bokehjs
        shell: bash
        run: |
          ./make/bindgen.sh
          node make build

      - name: Test bokehjs
        if: success() || failure()
        working-directory: ./bokehjs
        shell: bash
        run: |
          cargo test --no-fail-fast
          node make test

      - name: Lint codebase
        if: success() || failure()
        working-directory: ./bokehjs
        shell: bash
        run: |
          node make lint

      - name: Check repository status
        if: success() || failure()
        shell: bash
        run: |
          OUTPUT=$(git status --short bokehjs -- ':!bokehjs/test/baselines')
          if [[ ! -z "$OUTPUT" ]]; then echo $OUTPUT; exit 1; fi

      - name: Collect results
        if: runner.os == 'Linux' && (success() || failure())
        shell: bash
        run: |
          SRC="bokehjs/test/baselines/linux"
          DST="bokehjs-report/${SRC}"
          mkdir -p ${DST}
          if [[ -e ${SRC}/report.json ]];
          then
            CHANGED=$(git status --short ${SRC}/\*.blf ${SRC}/\*.png | cut -c4-)
            cp ${SRC}/report.{json,out} ${CHANGED} ${DST}
          fi

      - name: Upload package
        if: runner.os == 'Linux' && (success() || failure())
        uses: actions/upload-artifact@v3
        with:
          name: bokehjs-package
          path: bokehjs/build/dist/bokeh-bokehjs-*.tgz

      - name: Upload report
        if: runner.os == 'Linux' && (success() || failure())
        uses: actions/upload-artifact@v3
        with:
          name: bokehjs-report
          path: bokehjs-report
