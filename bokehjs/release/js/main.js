(function() {
  define(function(require, exports, module) {
    var Bokeh, glyph_factory;
    if (!window.Float64Array) {
      console.warn("Float64Array is not supported. Using generic Array instead.");
      window.Float64Array = Array;
    }
    Bokeh = {};
    Bokeh.version = '0.4.0';
    Bokeh.Collections = require("common/base").Collections;
    Bokeh.Config = require("common/base").Collections;
    Bokeh.GMapPlot = require("common/gmap_plot");
    Bokeh.GridPlot = require("common/grid_plot");
    Bokeh.HasParent = require("common/has_parent");
    Bokeh.HasProperties = require("common/has_properties");
    Bokeh.Plot = require("common/plot");
    Bokeh.Plotting = require("common/plotting");
    Bokeh.Affine = require("common/affine");
    Bokeh.build_views = require("common/build_views");
    Bokeh.bulk_save = require("common/bulk_save");
    Bokeh.ContinuumView = require("common/continuum_view");
    Bokeh.GridViewState = require("common/grid_view_state");
    Bokeh.load_models = require("common/load_models");
    Bokeh.PlotContext = require("common/plot_context");
    Bokeh.PlotWidget = require("common/plot_widget");
    Bokeh.PNGView = require("common/png_view");
    Bokeh.Random = require("common/random");
    Bokeh.safebind = require("common/safebind");
    Bokeh.SVGColors = require("common/svg_colors");
    Bokeh.ticking = require("common/ticking");
    Bokeh.ViewState = require("common/view_state");
    Bokeh.LinearMapper = require("mapper/1d/linear_mapper");
    Bokeh.GridMapper = require("mapper/2d/grid_mapper");
    Bokeh.LinearColorMapper = require("mapper/color/linear_color_mapper");
    Bokeh.Palettes = require("palettes/palettes");
    Bokeh.Legend = require("renderer/annotation/legend");
    Bokeh.Glyph = require("renderer/glyph/glyph");
    glyph_factory = require("renderer/glyph/glyph_factory");
    Bokeh.AnnularWedge = glyph_factory.annular_wedge;
    Bokeh.Annulus = glyph_factory.annulus;
    Bokeh.Arc = glyph_factory.arc;
    Bokeh.Asterisk = glyph_factory.asterisk;
    Bokeh.Bezier = glyph_factory.bezier;
    Bokeh.Circle = glyph_factory.circle;
    Bokeh.CircleCross = glyph_factory.circle_cross;
    Bokeh.CircleX = glyph_factory.circle_x;
    Bokeh.Cross = glyph_factory.cross;
    Bokeh.Diamond = glyph_factory.diamond;
    Bokeh.DiamondCross = glyph_factory.diamond_cross;
    Bokeh.Image = glyph_factory.image;
    Bokeh.ImageRGBA = glyph_factory.image_rgba;
    Bokeh.ImageURI = glyph_factory.image_uri;
    Bokeh.InvertedTriangle = glyph_factory.inverted_triangle;
    Bokeh.Line = glyph_factory.line;
    Bokeh.MultiLine = glyph_factory.multi_line;
    Bokeh.Oval = glyph_factory.oval;
    Bokeh.Patch = glyph_factory.patch;
    Bokeh.Patches = glyph_factory.patches;
    Bokeh.Quad = glyph_factory.quad;
    Bokeh.Quadratic = glyph_factory.quadratic;
    Bokeh.Ray = glyph_factory.ray;
    Bokeh.Rect = glyph_factory.rect;
    Bokeh.Segment = glyph_factory.segment;
    Bokeh.Square = glyph_factory.square;
    Bokeh.SquareCross = glyph_factory.square_cross;
    Bokeh.SquareX = glyph_factory.square_x;
    Bokeh.Text = glyph_factory.text;
    Bokeh.Triangle = glyph_factory.triangle;
    Bokeh.Wedge = glyph_factory.wedge;
    Bokeh.X = glyph_factory.x;
    Bokeh.DatetimeAxis = require("renderer/guide/datetime_axis");
    Bokeh.Grid = require("renderer/guide/grid");
    Bokeh.LinearAxis = require("renderer/guide/linear_axis");
    Bokeh.BoxSelection = require("renderer/overlay/box_selection");
    Bokeh.Properties = require("renderer/properties");
    Bokeh.embed_core = require("server/embed_core");
    Bokeh.serverrun = require("server/serverrun");
    Bokeh.serverutils = require("server/serverutils");
    Bokeh.ColumnDataSource = require("source/column_data_source");
    Bokeh.RemoteDataSource = require("source/remote_data_source");
    Bokeh.BoxSelectTool = require("tool/box_select_tool");
    Bokeh.DataRangeBoxSelectTool = require("tool/data_range_box_select_tool");
    Bokeh.EmbedTool = require("tool/embed_tool");
    Bokeh.PanTool = require("tool/pan_tool");
    Bokeh.PreviewSaveTool = require("tool/preview_save_tool");
    Bokeh.ResetTool = require("tool/reset_tool");
    Bokeh.ResizeTool = require("tool/resize_tool");
    Bokeh.CrosshairTool = require("tool/crosshair_tool");
    Bokeh.WheelZoomTool = require("tool/wheel_zoom_tool");
    Bokeh.BoxZoomTool = require("tool/box_zoom_tool");
    Bokeh.DataSlider = require("widget/data_slider");
    Bokeh.server_page = require("server/serverrun").load;
    exports.Bokeh = Bokeh;
    return Bokeh;
  });

}).call(this);

/*
//@ sourceMappingURL=main.js.map
*/