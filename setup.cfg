[flake8]
# References:
# http://flake8.readthedocs.org/en/latest/config.html
# http://flake8.readthedocs.org/en/latest/warnings.html#error-codes
#
# Style checks turned on:
#   F - all pyflake errors
#   E101 - indentation contains mixed spaces and tabs
#   E111 - indentation is not a multiple of four
#   E501 - line too long (see max-line-length)

# Note: there cannot be spaces after comma's here
exclude = __init__.py,node_modules
ignore = E,W
select = F,E101,E111,E501
max-line-length = 165

[doc8]
ignore=D001

[tool:isort]
balanced_wrapping=True
known_third_party=sphinx
skip=setup.py,versioneer.py
force_grid_wrap=0
include_trailing_comma=True
use_parentheses=True
line_length=88

[tool:pytest]
norecursedirs = build _build node_modules
python_files = *_tests.py *_test.py test_*.py
markers =
    sampledata: a test for bokeh.sampledata
    selenium: a test as requiring selenium

[versioneer]
# Refer to python-versioneer repository for documentation.
# In gist, _version.py is used to compute project version directly from
# git tag. A default _version.py is provided when loading the project
# from source, otherwise setup.py will invoke versioneer.py to release
# a _version.py substituted with the git tag.
VCS = git
versionfile_source = bokeh/_version.py
versionfile_build = bokeh/_version.py
# tags are like 1.2.0
tag_prefix =
# dirname like 'myproject-1.2.0'
parentdir_prefix = Bokeh-
# For backwards compatibility, use git describe format for version string.
# (This is not PEP440-compliant though since it won't use "+" to separate
# local information, can use "pep440" style instead.)
style = pep440

[mypy]
python_version = 3.6

pretty = True
show_error_codes = True
show_error_context = True
show_column_numbers = True

namespace_packages = True
ignore_missing_imports = True

disallow_any_unimported = True
disallow_any_expr = False
disallow_any_decorated = True
disallow_any_explicit = False
disallow_any_generics = True
disallow_subclassing_any = True

disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
strict_optional = True

warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_return_any = True
warn_unreachable = True

show_none_errors = True
ignore_errors = False

allow_untyped_globals = False
allow_redefinition = False
implicit_reexport = True
strict_equality = True

warn_unused_configs = True

# For now enable each typed module individually.
[mypy-bokeh.*]
ignore_errors = True

[mypy-bokeh.palettes]
ignore_errors = False

[mypy-bokeh.embed.standalone]
ignore_errors = False
warn_return_any = False
disallow_untyped_calls = False

[mypy-bokeh.embed.wrappers]
ignore_errors = False
warn_return_any = False

[mypy-bokeh.util.paths]
ignore_errors = False

[mypy-bokeh.util.options]
ignore_errors = False
disallow_untyped_calls = False

[mypy-bokeh.util.browser]
ignore_errors = False

[mypy-bokeh.util.sampledata]
ignore_errors = False

[mypy-bokeh.util.token]
ignore_errors = False

[mypy-bokeh.util.deprecation]
ignore_errors = False
warn_unreachable = False

[mypy-bokeh.core.query]
ignore_errors = False

[mypy-bokeh.driving]
ignore_errors = False

[mypy-bokeh.util.hex]
ignore_errors = False

[mypy-bokeh.ext]
ignore_errors = False

[mypy-bokeh.command.*]
ignore_errors = False
disallow_untyped_calls = False

[mypy-bokeh.io.export]
ignore_errors = False
disallow_any_unimported = False

[mypy-bokeh.io.util]
ignore_errors = False

[mypy-bokeh.util.webdriver]
ignore_errors = False
