.. _release-2-0-0:

2.0.0
=====

Bokeh Version ``2.0.0`` (XXXX 2019) is a major milestone of the Bokeh project.

And several other bug fixes and docs additions. For full details see the
:bokeh-tree:`CHANGELOG`.

.. _release-2-0-0-migration:

`Migration Guide <releases.html#release-2-0-0-migration>`__
-----------------------------------------------------------

Minimum Package Versions
~~~~~~~~~~~~~~~~~~~~~~~~

This release raises the minimum version for some packages

* Bokeh now requires Python 3.6 or higher.
* Bokeh now requires Numpy 1.11.3 or higher.
* The Bokeh server now requires Tornado 5.0 or higher.

HoverTool Formatters Specification
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Previously, the ``formatters`` property accepted a CDS column name. For example
a formatter for a tooltip for ``"@foo`` could be specied with just ``"foo"``:

.. code-block:: python

    hover_tool.formatters = { "foo": "datetime"}   # BAD

Now, the full matching tooltip specification, including the ``"@"``, should
be used:

.. code-block:: python

    hover_tool.formatters = { "@foo": "datetime"}   # GOOD

This allows tooltip formatters to be used uniformly with both columns, as well
as "special variables", e.g. ``"$x"``.

Bokeh Sphinx Extension
~~~~~~~~~~~~~~~~~~~~~~

The obsolete Sphinx confiuguration parameters ``bokeh_plot_use_relative_paths``
and ``bokeh_plot_pyfile_include_dirs`` have been removed. The unused
``PLOT_PAGE`` template has also been removed.

"Use Strict" for CustomJS
~~~~~~~~~~~~~~~~~~~~~~~~~

The ``use_strict`` property has been removed from all models that it had been
on previously. All JavaScript code, e.g. for ``CustomJS`` will always be rendered
with ``"use_strict"`` added.

``require()`` in CustomJS
~~~~~~~~~~~~~~~~~~~~~~~~~

``require()`` isn't directly available from ``CustomJS`` anymore, as it exposed
the underlying module system, which is prohibited since bokehjs's departure from
CJS module system. Use APIs exposed on ``Bokeh`` object or ``Bokeh.require()``.
Consider the later option as the last resort measure.

Bokeh Prototcol Versioning
~~~~~~~~~~~~~~~~~~~~~~~~~~

Bokeh wire protocol messages no longer express any revision, and URLs for
server sessions no longer specify ``"bokeh-protocol-version"``. It is assumed
any client and server communicating are the same release version (which has
always been true in any usage scenario).

Selection Dicts
~~~~~~~~~~~~~~~

The obsolete old-style selection dictionaries, i.e. ``selected['1d']`` have
been removed. Use ``selected.indices``, etc. only.

Immutable Palettes
~~~~~~~~~~~~~~~~~~

Previousuly, Bokeh used a complicated copy-on-access scheme to return palettes
as lists. The necessary "module hack" could confuse IDEs, complicated the docs
build process, and sometimes lead to unexpected behavior. All palettes are now
tuples, which is a simpler solution to the problem of mutable module attributes.

The main difference is that palettes can no longer be modified in place,
including reversing the palette. To reverse a palette, do:

.. code-block:: python

    list(reverse(pal))

Tile Providers
~~~~~~~~~~~~~~

The named tile properties in ``tile_providers.py``, e.g ``CARTODBPOSITRON`` now
return then vendor id for that tile provider. This is can be passed to the
``get_provider`` method directly to return a new ``TileProvider`` instance.

ColumnDataSource Properties
~~~~~~~~~~~~~~~~~~~~~~~~~~~

The ``ColumnDataSource.selected`` property is now read-only.

The ``ColumnDataSource.data`` property can only be set from plain Python dicts.
Attempting to set from another CDS, i.e ``s1.data = s2.data``, will raise an
error.

Missing Renderers Warning
~~~~~~~~~~~~~~~~~~~~~~~~~

The ``W-1000 (MISSING_RENDERERS)`` validation warning will no longer trigger
for plots that have added annotations, even if no other glyphs are present.

API Removals
~~~~~~~~~~~~

The following modules and functions were previously deprecated or were internal
and no longer needed:

* ``bokeh.client``: method ``ClientSession.loop_until_closed`` removed

* ``bokeh.models.callbacks``: methods ``CustomJS.from_py_func`` and
  ``CustomJS.from_coffeescript`` removed

* ``bokeh.models.filters``: methods ``CustomJSFilter.from_py_func`` and
  ``CustomJSFilter.from_coffeescript`` removed

* ``bokeh.models.formatters``: methods ``FuncTickFormatter.from_py_func`` and
  ``FuncTickFormatter.from_coffeescript`` removed

* ``bokeh.models.plots``: proeprties ``Plot.h_symmetry`` and ``Plot.v_symmetry``
  removed

* ``bokeh.models.tools``: methods ``CustomJSHover.from_py_func`` and
  ``CustomJSHover.from_coffeescript`` removed

* ``bokeh.models.transforms``: methods ``CustomJSTransform.from_py_func`` and
  ``CustomJSTransform.from_coffeescript`` removed

* ``bokeh.models.widgets.buttons``: properties ``Dropdown.default_value`` and
  ``Dropdown.value`` removed

* ``bokeh.models.widgets.sliders``: ``callback``, ``callback_throttle`, and
  ``callback_policy`` removed from all sliders. Use ``value`` for continous
  updates and ``value_throttled`` for updates only on mouseup.

* ``bokeh.protocol`` entire ``versions`` module removed, ``messages.register``
  function removed.

* ``bokeh.util.compiler``: class ``CoffeeScript`` and related code removed

* ``bokeh.util.future``: entire module removed

* ``bokeh.util.string``: functions ``encode_utf8``, ``decode_utf8``, and
  ``escape`` removed

Additionally, the ``callback`` property is removed from all Bokeh models except
``CustomAction``, ``HoverTool`` ``TapTool``, and ``OpenURL``. Instead, the more
general ``js_on_change`` or ``js_on_event`` methods should be used.

API Deprecations
~~~~~~~~~~~~~~~~

The following new deprecations are effective:

* ``bokeh.layouts.WidgetBox`` is deprecated use ``bokeh.layouts.Column``
  instead.

* Importing ``from_networkx`` from ``bokeh.models.graphs`` is deprecated. Import
  from ``bokeh.plotting`` instead.
